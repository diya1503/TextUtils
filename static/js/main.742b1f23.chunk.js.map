{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","role","htmlFor","greenMode","TextForm","text","setText","useState","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","handleUpClick","newText","toUpperCase","showAlert","handleLoClick","toLowerCase","handleClearClick","handleCapitalizeCase","split","map","el","charAt","slice","join","handleCopy","document","getElementById","select","navigator","clipboard","writeText","handleExtraSpaces","length","defaultProps","Alert","alert","word","lower","capitalized","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.742b1f23.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom';\n\nexport default function Navbar(props) {\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n    <div className=\"container-fluid\">\n      {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <li className=\"nav-item\"> \n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\n          </li>\n        </ul>\n        {/* <form className=\"d-flex\" role=\"search\">\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n          <button className=\"btn btn-primary\" type=\"submit\">Search</button>\n        </form> */}\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\n        </div>\n\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n            <input className=\"form-check-input\" onClick={props.greenMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable GreenMode</label>\n        </div>\n\n\n      </div>\n    </div>\n  </nav>\n  )\n}\n\nNavbar.propTypes = {\n            title: PropTypes.string.isRequired,\n            aboutText: PropTypes.string.isRequired\n}\n\nNavbar.defaultProps = {\n            title: 'Set title here',\n            aboutText: 'About'\n};","import React, {useState} from 'react'\n\nexport default function TextForm(props) {\n    const handleUpClick = () => {\n      // console.log(\"Uppercase was clicked\");\n      let newText = text.toUpperCase();\n      setText(newText);\n      props.showAlert(\"Converted to uppercase!\",\"success\");\n    }\n\n    const handleLoClick = () => {\n      let newText = text.toLowerCase();\n      setText(newText); \n      props.showAlert(\"Converted to lowercase!\", \"success\");\n    }\n\n    const handleClearClick = () => {\n        let newText = '';\n        setText(newText);\n        props.showAlert(\"Cleared Your Text\", \"success\");\n    }\n\n    const handleCapitalizeCase = () => {\n      let newText = text.split(\" \").map(el => el.charAt(0).toUpperCase() + el.slice(1)).join(\" \");\n      setText(newText); \n      props.showAlert(\"Converted to Capitalized!\", \"success\");\n    }\n\n    const handleOnChange = (event) => { \n      // console.log(\"On Change\");\n      setText(event.target.value); \n    }\n\n  const handleCopy = () => {\n        let text = document.getElementById(\"myBox\");\n        text.select();\n        navigator.clipboard.writeText(text.value);\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\n  }\n\n  const handleExtraSpaces = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"))\n    props.showAlert(\"Extra Spaces Removed\", \"success\");\n  }\n    \n    const [text, setText] = useState('');\n    // text = \"new text\";  // Wrong way to chage the state\n    // setText(\"new text\");  // Correct way to change the state\n\n  return (\n    <>\n    <div className='container' style={{color: props.mode==='dark'?'white':'#042743', color: props.mode==='dark'?'white':'#3D550C'}}>\n      <h1>{props.heading}</h1>\n      <div className=\"mb-3\">\n         <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\n      </div>\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\n            <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lowercase</button>\n            <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\n            <button className=\"btn btn-primary mx-1\" onClick={handleCapitalizeCase}>Capitalized Case</button>\n            <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\n            <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Space</button>\n    </div>\n    <div className=\"container my-2\" style={{color: props.mode==='dark'?'white':'#042743', color: props.mode==='dark'?'white':'#3D550C'}}>\n      <h2>Your text summary</h2>\n      <p>{text.split(\" \").length} words and {text.length} characters</p>\n      <p>{0.008 * text.split(\" \").length} Minutes read</p>\n      <h2>Preview</h2>\n      <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\n    </div>\n    </>\n  )\n}\n ","import React from 'react'\n\nfunction Alert(props) {\n    const capitalized = (word) => {\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n  return (\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n         <strong>{capitalized(props.alert.type)}</strong> : {props.alert.msg}\n         {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\n    </div>\n  )\n}\n\nexport default Alert\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\n// import {\n//   BrowserRouter,\n//   Route,\n//   Routes,\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not \n  const [alert,setAlert] = useState(null);\n  // const [gmode, setGMode] = useState('green');\n \n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type         // we can set same name of property and parameter\n    })\n    setTimeout(() => {\n        setAlert(null);\n    },2000)\n  }\n\n  const toggleMode = () => {\n      if(mode === 'light'){\n        setMode('dark');\n        document.body.style.backgroundColor = \"#042743\";\n        showAlert(\"Dark mode has been enabled\", \"success\");\n        document.title = \"TextUtils - Dark Mode\";\n      }\n      else{\n        setMode('light');\n        document.body.style.backgroundColor = 'white';\n        showAlert(\"Light mode has been enabled\", \"success\");\n        document.title = \"TextUtils - Light Mode\";\n      }\n  }\n\n  const greenMode = () => {\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = \"#3D550C\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      // setInterval(() => {\n      //     document.title = 'TextUtils is Amazing Mode';\n      // },2000);\n      // setInterval(() => {\n      //     document.title = 'Install TextUtils Now';\n      // },1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\",\"success\");\n    }\n  }\n\n  return (\n    <>\n      {/* <Navbar title=\"TextUtils\" aboutText=\"About Us\"/> */}\n      {/* <Navbar/> */}\n     \n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} greenMode={greenMode} />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      {/* <BrowserRouter> */}\n      {/* <Routes> */}\n          {/* <Route exact path=\"/about\" element={<About/>} /> */}\n             \n          {/* <Route exact path=\"/\"> */}\n              <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n          {/* </Route> */}\n      {/* </Routes>   */}\n      {/* </BrowserRouter>       */}\n      </div>  \n    </>\n  );\n}\n\nexport default App;\n\n\n\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}